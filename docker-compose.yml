services:
  db:
    container_name: db
    image: postgres:17
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static:/app/backend/static
      - media:/app/backend/media
    env_file:
      - .env
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_API_URL=http://nginx:80/api/v1

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Nginx config file
      - ./static:/usr/share/nginx/html/static
      - ./media:/usr/share/nginx/html/media
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  media:
  static: